{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug Python File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "env": {
                "TRITON_INTERPRET": "0", // Set to "1" to debug (interpret) Triton code
                "TRITON_PRINT_AUTOTUNING": "1", // Set to "1" to print autotuning information
                "TRITON_KERNEL_DUMP": "1", // Set to "1" to dump generated kernel code
                "TRITON_DUMP_DIR": "${workspaceFolder}/artifacts" // Directory to save dumped kernels
            },
            "justMyCode": false
        },
        {
            "name": "Run kernel",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/release/bin/sgemm",
            "cwd": "${workspaceFolder}",
            "environment": [
                // Set the path to the cuda libraries (e.g., libcudart.so and libcuda.so)
                // If you use the standard cuda installation (with /usr/bin/nvcc),
                //    you don't need this step since the libraries are in the default path /usr/lib/x86_64-linux-gnu/ (for x86_64)
                // If you use another cuda installation, e.g., /usr/local/cuda-13, use the following lines:
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "/usr/local/cuda-13/lib64" // Change this path if needed
                }
            ]
        },
        {
            "name": "Debug kernel (GPU code)",
            "type": "cuda-gdb",
            "request": "launch",
            "program": "${workspaceFolder}/build/debug/bin/sgemm",
            "cwd": "${workspaceFolder}",
            "miDebuggerPath": "/usr/local/cuda-13/bin/cuda-gdb", // Change this path
            "environment": [
                // For some debugging features, libpython3.6m.so is required.
                // In case you don't have it in the default library paths:
                //   1. Install the lib: examples/cuda-gdb/install_python3.6.bash
                //   2. Use the following lines of code:
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "/opt/python3.6/lib" // Change this path if needed
                }
            ]
        },
        {
            "name": "Debug kernel (CPU code)",
            "type": "lldb",
            "request": "launch",
            "program": "${workspaceFolder}/build/debug/bin/sgemm",
            "cwd": "${workspaceFolder}",
        },
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        }
    ]
}